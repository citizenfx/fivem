#define BLOCK_NATIVE(x)			\
	case (x):					\
	{							\
		handler = noOpHandler;	\
		break;					\
	}							\
	
auto noOpHandler = [](rage::scrNativeCallContext* ctx) 
{

};


switch (origHash)
{
	BLOCK_NATIVE(0xF2DD2298B3AF23E2); // STRING_TO_INT
	BLOCK_NATIVE(0x7D1D4A3602B6AD4E); // CLEAR_BIT
	BLOCK_NATIVE(0x324DC1CEF57F31E6); // SET_BITS_IN_RANGE
	BLOCK_NATIVE(0xF73FBE4845C43B5B); // SET_BIT
	BLOCK_NATIVE(0xF7AC7DC0DEE7C9BE); // COPY_SCRIPT_STRUCT
	BLOCK_NATIVE(0x56B7291FB953DD51); // DATAFILE_CREATE
	BLOCK_NATIVE(0x9FB90EEDEA9F2D5C); // DATAFILE_DELETE
	BLOCK_NATIVE(0x604B8ED1A482F9DF); // DATAFILE_DELETE_REQUESTED_FILE
	BLOCK_NATIVE(0xBBD8CF823CAE557C); // DATAFILE_GET_FILE_DICT
	BLOCK_NATIVE(0x17279C820464CEE0); // DATAFILE_HAS_LOADED_FILE_DATA
	BLOCK_NATIVE(0xE60100389E50EADE); // DATAFILE_HAS_VALID_FILE_DATA
	BLOCK_NATIVE(0x46102A0989AD80B5); // DATAFILE_SELECT_ACTIVE_FILE
	BLOCK_NATIVE(0x790EC421078F5C4E); // DATAFILE_UGC_SELECT_DATA
	BLOCK_NATIVE(0xA5834834CA8FD7FC); // DATAFILE_WATCH_REQUEST_ID
}

#undef BLOCK_NATIVE
